name: Build and Test

on:
  push:
    paths: 
      - 'src/exercise.py'

jobs:
  
  get_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with: 
        repository: CS-1030/test-scripts          
        token: ${{ secrets.PAT }}
        path: temp
    - run: cat temp/lesson7/test_exercise.py > tests/test_exercise.py
    - uses: EndBug/add-and-commit@v7
      with:
        add: 'tests/test_exercise.py --force'
        message: 'Automated test retrieval'
        author_name: ${{ github.repository_owner }}
     
  test_and_manage_issues:
    needs: get_test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Setup flake8 annotations
      uses: rbialon/flake8-annotations@v1
    - name: Lint with flake8
      run: |
        flake8 src/exercise.py --select=E9,F63,F7,F82 --show-source
        flake8 src/exercise.py --max-complexity=10 --max-line-length=127
    - name: Test with pytest
      run: python3 -m pytest >> .github/ISSUE_TEMPLATE/test-failure.md 
      
    - name: Create issue (if tests fail)
      if: failure()
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: ${{ github.repository }}
      with:
        filename: .github/ISSUE_TEMPLATE/test-failure.md
        update_existing: true
        assignees: ${{ github.actor }}  
        
    - name: Close issue (if tests pass)
      if: success()
      uses: actions/stale@v3
      with:
        only-labels: 'bug'
        stale-issue-label: 'resolved'
        stale-issue-message: 'Student Program passes all tests. Issue is resolved'
        close-issue-message: 'Closing issue.'
        days-before-issue-stale: 0
        days-before-close: 0      
